apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "multicalchart.name" . }}-frontend
  labels:
    app: {{ template "multicalchart.name" . }}-frontend
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: frontend
spec:
  replicas: {{ .Values.frontendReplicaCount }}
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ template "multicalchart.name" . }}
        name: calc-frontend
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: calcfrontend
          image: "{{ .Values.image.repository }}/{{ .Values.image.frontendImage }}:{{ .Values.image.frontendTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000      
              protocol: TCP
          env: 
            - name: "ENDPOINT"
              value: "{{ .Release.Name }}-calc-backend-svc"
{{- if .Values.dependencies.useAppInsights }}
            - name: "INSTRUMENTATIONKEY"
              valueFrom:
                secretKeyRef:
                  name: appinsightsecret
                  key: appinsightskey
{{- else }}
            - name: "INSTRUMENTATIONKEY"
              value: "dummy"
{{- end }}
            - name: "PORT"
              value: "3000"
{{- if .Values.dependencies.usePodRedis }}
            - name: "REDIS_HOST"
              value: "127.0.0.1"
            - name: "REDIS_AUTH"
              value: "MySuperSecretRedis"
{{- else }}
{{- if .Values.dependencies.useRedis }}
            - name: "REDIS_HOST"
              valueFrom:
                secretKeyRef:
                  name: rediscachesecret
                  key: redishostkey
            - name: "REDIS_AUTH"
              valueFrom:
                secretKeyRef:
                  name: rediscachesecret
                  key: redisauthkey
{{- else }}
            - name: "REDIS_HOST"
              value: ""
            - name: "REDIS_AUTH"
              value: ""
{{- end }}
{{- end }}
          livenessProbe:
            httpGet:
              path: /ping
              port: 3000
          readinessProbe:
            httpGet:
              path: /ping
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.dependencies.usePodRedis }}
        - name: redis
          image: redis:4.0.11-alpine
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["--requirepass", "MySuperSecretRedis"]
          ports:
            - containerPort: 6379
              name: redis
          env:
            - name: "ASDFASDF"
              value: "localhost"
            - name: "ASDFASD4"
              value: "no"
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "multicalchart.name" . }}-backend
  labels:
    app: {{ template "multicalchart.name" . }}-backend
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: backend
spec:
  replicas: {{ .Values.backendReplicaCount }}
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ template "multicalchart.name" . }}
        name: calc-backend
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: calcbackend
          image: "{{ .Values.image.repository }}/{{ .Values.image.backendImage }}:{{ .Values.image.backendTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3001    
              protocol: TCP
          env: 
{{- if .Values.dependencies.useAppInsights }}
            - name: "INSTRUMENTATIONKEY"
              valueFrom:
                secretKeyRef:
                  name: appinsightsecret
                  key: appinsightskey
{{- else }}
            - name: "INSTRUMENTATIONKEY"
              value: "dummy"
{{- end }}
            - name: "PORT"
              value: "3001"
          livenessProbe:
            httpGet:
              path: /ping
              port: 3001
          readinessProbe:
            httpGet:
              path: /ping
              port: 3001
          resources:
{{ toYaml .Values.resources | indent 12 }}