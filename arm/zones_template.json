{  
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters": {
      "resourceName": {
          "type": "string",
          "metadata": {
              "description": "The name of the Managed Cluster resource."
          }
      },
      "location": {
          "type": "string",
          "metadata": {
              "description": "The location of AKS resource."
          }
      },
      "dnsPrefix": {
          "type": "string",
          "metadata": {
              "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
          }
      },
      "osDiskSizeGB": {
          "type": "int",
          "defaultValue": 0,
          "metadata": {
              "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
          },
          "minValue": 0,
          "maxValue": 1023
      },
      "agentCount": {
          "type": "int",
          "defaultValue": 5,
          "metadata": {
              "description": "The number of agent nodes for the cluster."
          },
          "minValue": 5,
          "maxValue": 50
      },
      "agentVMSize": {
          "type": "string",
          "defaultValue": "Standard_D2_v2",
          "metadata": {
              "description": "The size of the Virtual Machine."
          }
      },
      "servicePrincipalClientId": {
          "metadata": {
              "description": "Client ID (used by cloudprovider)."
          },
          "type": "securestring"
      },
      "servicePrincipalClientSecret": {
          "metadata": {
              "description": "The Service Principal Client Secret."
          },
          "type": "securestring"
      },
      "osType": {
          "type": "string",
          "defaultValue": "Linux",
          "allowedValues": [
              "Linux"
          ],
          "metadata": {
              "description": "The type of operating system."
          }
      },
      "kubernetesVersion": {
          "type": "string",
          "defaultValue": "1.12.5",
          "metadata": {
              "description": "The version of Kubernetes."
          }
      },
      "networkPlugin": {
          "type": "string",
          "allowedValues": [
              "azure",
              "kubenet"
          ],
          "metadata": {
              "description": "Network plugin used for building Kubernetes network."
          }
      },
      "maxPods": {
          "type": "int",
          "defaultValue": 30,
          "metadata": {
              "description": "Maximum number of pods that can run on a node."
          }
      },
      "enableRBAC": {
          "type": "bool",
          "defaultValue": true,
          "metadata": {
              "description": "Boolean flag to turn on and off of RBAC."
          }
      },
      "enablePodSecurityPolicy": {
         "type": "bool",
         "defaultValue": true,
         "metadata": {
             "description": "Booleab flag to turn on and off PSP."
        }
     }
  },
   "resources":[  
      {  
         "apiVersion":"2019-02-01",
         "type":"Microsoft.ContainerService/managedClusters",
         "location":"[parameters('location')]",
         "name":"[parameters('resourceName')]",
         "properties":{  
            "kubernetesVersion": "[parameters('kubernetesVersion')]",
            "enableRBAC": "[parameters('enableRBAC')]",
            "enablePodSecurityPolicy": "[parameters('enablePodSecurityPolicy')]",
            "dnsPrefix": "[parameters('dnsPrefix')]",
            "agentPoolProfiles":[  
               {  
                  "name":"agentpool1",
                  "count": "[parameters('agentCount')]",
                  "vmSize":"Standard_D2_v2",
                  "storageProfile":"ManagedDisks",
                  "osType":"Linux",
                  "maxPods":30,
                  "type":"VirtualMachineScaleSets",
                  "availabilityZones":[  
                     "1",
                     "2",
                     "3"
                  ]
               }
            ],
            "servicePrincipalProfile":{  
               "ClientId": "[parameters('servicePrincipalClientId')]",
               "Secret": "[parameters('servicePrincipalClientSecret')]"
            },
            "networkProfile": {
               "networkPlugin": "[parameters('networkPlugin')]"
           }
         }
      }
   ],
   "outputs":{  
      "controlPlaneFQDN":{  
         "type":"string",
         "value":"[reference(parameters('resourceName')).fqdn]"
      }
   }
}