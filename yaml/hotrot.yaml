apiVersion: v1
kind: ServiceAccount
metadata:
  name: myjaeger-hotrod
  labels:
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.13.0
    app.kubernetes.io/instance: myjaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: hotrod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myjaeger-hotrod
  labels:
    app.kubernetes.io/name: jaeger
    jaeger-infra: hotrod-deployment
    helm.sh/chart: jaeger-0.13.0
    app.kubernetes.io/component: hotrod
    app.kubernetes.io/instance: myjaeger
    app.kubernetes.io/managed-by: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: hotrod
      app.kubernetes.io/instance: myjaeger
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: hotrod
        app.kubernetes.io/instance: myjaeger
    spec:
      serviceAccountName: myjaeger-hotrod
      containers:
        - name: myjaeger-hotrod
          image: jaegertracing/example-hotrod:1.13.1
          imagePullPolicy: Always
          env:
            - name: JAEGER_AGENT_HOST
              value: jaeger-agent
            - name: JAEGER_AGENT_PORT
              value: "6831"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
apiVersion: v1
kind: Service
metadata:
  name: myjaeger-hotrod
  labels:
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.13.0
    app.kubernetes.io/component: hotrod
    app.kubernetes.io/instance: myjaeger
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: hotrod
    app.kubernetes.io/instance: myjaeger